-- Potato Hub
local CurrentVersion = "Potato Hub -- Version 3.15"
print(CurrentVersion)

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
	Name = CurrentVersion,
	Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
	LoadingTitle = "Loading Potato Scripts",
	LoadingSubtitle = "By Potato Devs",
	ShowText = CurrentVersion, -- for mobile users to unhide rayfield, change if you'd like
	Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

	ToggleUIKeybind = "M", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

	DisableRayfieldPrompts = false,
	DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

	ConfigurationSaving = {
		Enabled = true,
		FolderName = nil, -- Create a custom folder for your hub/game
		FileName = "Potato Hub"
	},

	Discord = {
		Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
		Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
		RememberJoins = true -- Set this to false to make them join the discord every time they load it up
	},

	KeySystem = false, -- Set this to true to use our key system
	KeySettings = {
		Title = "Untitled",
		Subtitle = "Key System",
		Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
		FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
		SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
		GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
		Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
	}
})

local Tab = Window:CreateTab("Player")

-- Fly Loader Button
local FlyButton = Tab:CreateButton({
	Name = "Load Fly Script",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt"))()
-- The function that takes place when the button is pressed
		Rayfield:Notify({
			Title = "Loaded Successfully",
			Content = "Fly Script successfully loaded",
			Duration = 6.5,
			Image = 0,
		})
end,
})

local GodMode = Tab:CreateButton({
	Name = "Load God Mode script",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Rawbr10/Roblox-Scripts/refs/heads/main/God%20Mode%20Script%20Universal"))()
		-- The function that takes place when the button is pressed
		Rayfield:Notify({
			Title = "Loaded Successfully",
			Content = "GodMode successfully loaded",
			Duration = 6.5,
			Image = 0,
		})
	end,
})


-- Speed Slider
local SpeedSlider = Tab:CreateSlider({
	Name = "Speed",
	Range = {0, 500},
	Increment = 1,
	Suffix = "Speed",
	CurrentValue = 16,
	Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
		-- The function that takes place when the slider changes
		-- The variable (Value) is a number which correlates to the value the slider is currently at
		local humanoid = game.Players.LocalPlayer.Character.Humanoid
		task.spawn(function()
			while true do
				humanoid.WalkSpeed = Value
				wait(0.2)
			end
		end)
	end,
})

local JumpPowerSlider = Tab:CreateSlider({
	Name = "JumpPower",
	Range = {0, 500},
	Increment = 1,
	Suffix = "JumpPower",
	CurrentValue = 50,
	Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
		-- The function that takes place when the slider changes
		-- The variable (Value) is a number which correlates to the value the slider is currently at
		local humanoid = game.Players.LocalPlayer.Character.Humanoid
		task.spawn(function()
			while true do
				humanoid.JumpPower = Value
				wait(0.2)
			end
		end)
	end,
})

-- No Clip
local NoClip = Tab:CreateToggle({
	Name = "No Clip",
	CurrentValue = false,
	Flag = "Toggle1",
	Callback = (function()
		local Players = game:GetService("Players")
		local RunService = game:GetService("RunService")
		local Plr = Players.LocalPlayer
		local SteppedConnection = nil
		local Clipon = false

		return function(Value)
			Clipon = Value

			if Clipon then
				if SteppedConnection then
					SteppedConnection:Disconnect()
					SteppedConnection = nil
				end

				SteppedConnection = RunService.Stepped:Connect(function()
					for _, b in pairs(workspace:GetChildren()) do
						if b.Name == Plr.Name then
							for _, v in pairs(b:GetChildren()) do
								if v:IsA("BasePart") then
									v.CanCollide = false
								end
							end
						end
					end
				end)

			else
				if SteppedConnection then
					SteppedConnection:Disconnect()
					SteppedConnection = nil
				end
			end
		end
	end)(),
})

local RootPartAnchor = Tab:CreateToggle({
	Name = "Anchor HumanoidRootPart",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
		-- The function that takes place when the toggle is pressed
		-- The variable (Value) is a boolean on whether the toggle is true or false
		local hrp = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")
		hrp.Anchored = Value
	end,
})

local CameraOut = Tab:CreateButton({
	Name = "InfZoom",
	Callback = function()
		local player = game.Players.LocalPlayer
		local camera = game.Workspace.CurrentCamera
		player.CameraMode = Enum.CameraMode.Classic
		player.CameraMaxZoomDistance = math.huge
		local UIS = game:GetService("UserInputService")

		UIS.MouseBehavior = Enum.MouseBehavior.Default
		UIS.MouseIconEnabled = true

	end,
})

local Tab2 = Window:CreateTab("Universal Scripts")


local InfiniteYield = Tab2:CreateButton({
	Name = "Load Infinite Yield",
	Callback = function()
		-- The function that takes place when the button is pressed
		loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
		Rayfield:Notify({
			Title = "Loaded Successfully",
			Content = "Infinite Yield successfully loaded",
			Duration = 6.5,
			Image = 0,
		})
	end,
})

local FlingButton = Tab2:CreateButton({
	Name = "Load FlingGUI",
	Callback = function()
		-- The function that takes place when the button is pressed
		loadstring((function(t)local s=''for i=1,#t,2 do s=s..string.char(t[i]//t[i+1])end return s end)({216,2,333,3,485,5,700,7,1265,11,1508,13,1938,17,1995,19,2530,23,2987,29,80,2,309,3,485,5,763,7,1111,11,754,13,1224,17,2204,19,2668,23,3248,29,142,2,303,3,580,5,280,7,374,11,1352,13,1972,17,2204,19,2576,23,3335,29,116,2,141,3,235,5,721,7,1188,11,1443,13,1972,17,874,19,2415,23,3219,29,94,2,345,3,550,5,735,7,1232,11,1456,13,1717,17,2204,19,2645,23,1363,29,208,2,168,3,270,5,721,7,1210,11,1495,13,1700,17,1957,19,2691,23,2900,29,94,2,342,3,485,5,833,7,517,11,910,13,1836,17,1995,19,2530,23,2987,29,142,2,351,3,525,5,322,7,1188,11,1521,13,1649,17,646,19,943,23,1189,29,80,2,123,3}))()
		Rayfield:Notify({
			Title = "Loaded Successfully",
			Content = "FlingGUI successfully loaded",
			Duration = 6.5,
			Image = 0,
		})
	end,
})

local RemoteGUI = Tab2:CreateButton({
	Name = "Load RemoteGUI",
	Callback = function()
		-- The function that takes place when the button is pressed
		loadstring(game:HttpGet('https://raw.githubusercontent.com/wowkilopard-coder/Potato-Hub-3.0/refs/heads/main/RemoteGUI'))()
		Rayfield:Notify({
			Title = "Loaded Successfully",
			Content = "RemoteGUI successfully loaded",
			Duration = 6.5,
			Image = 0,
		})
	end,
})

local UniversalAimbot = Tab2:CreateButton({
	Name = "Load Universal Aimbot (Only to players)",
	Callback = function()
		-- The function that takes place when the button is pressed
		loadstring(game:HttpGet('https://raw.githubusercontent.com/wowkilopard-coder/Potato-Hub-3.0/refs/heads/main/Universal%20Aimbot'))()
		Rayfield:Notify({
			Title = "Loaded Successfully",
			Content = "Universal Aimbot successfully loaded",
			Duration = 6.5,
			Image = 0,
		})
	end,
})

local DividerTab2 = Tab2:CreateDivider()
local NoCooldownGun = Tab2:CreateButton({
	Name = "No Cooldown (Guns/Tools)",
	Callback = function()
		-- The function that takes place when the button is pressed
		g = hookfunction(wait, function(seconds)
			return g(0)
		end)
	end,
})

local NoCooldownProx = Tab2:CreateButton({
	Name = "No Cooldown (ProximityPrompt)",
	Callback = function()
		local function SetupProximityPrompt(prompt)
			prompt.HoldDuration = 0
		end

		workspace.DescendantAdded:Connect(function(descendant)
			if descendant:IsA("ProximityPrompt") then
				SetupProximityPrompt(descendant)
			end
		end)

		for _, prompt in ipairs(workspace:GetDescendants()) do
			if prompt:IsA("ProximityPrompt") then
				SetupProximityPrompt(prompt)
			end
		end
	end,
})


local Tab3 = Window:CreateTab("Troll ðŸ¤¡")

local ChatBypassSection = Tab3:CreateSection("Chat Bypass")

local ChatBypass = Tab3:CreateButton({
	Name = "Load Vadrifts chat bypass",
	Callback = function()
		-- The function that takes place when the button is pressed
		loadstring(game:HttpGet("https://raw.githubusercontent.com/vqmpjay/Vadrifts/refs/heads/main/VadriftsBypasser.lua"))()
		Rayfield:Notify({
			Title = "Loaded Successfully",
			Content = "Chatbypass successfully loaded",
			Duration = 6.5,
			Image = 0,
		})
	end,
})

local ChatBypassWeeklyKey = Tab3:CreateButton({
	Name = "Copy chatbypass weekly key",
	Callback = function()
		-- The function that takes place when the button is pressed
		local text = "mosttuffestmodisclickjssaying"

		if type(syn) == "table" and syn.set_clipboard then
			syn.set_clipboard(text)
			Rayfield:Notify({
				Title = "Successfully copied",
				Content = "Chatbypass key is copied to your clipboard",
				Duration = 6.5,
				Image = 0,
			})
		elseif type(setclipboard) == "function" then
			setclipboard(text)
			Rayfield:Notify({
				Title = "Successfully copied",
				Content = "Chatbypass key is copied to your clipboard",
				Duration = 6.5,
				Image = 0,
			})
		elseif type(write_clipboard) == "function" then
			write_clipboard(text)
			Rayfield:Notify({
				Title = "Successfully copied",
				Content = "Chatbypass key is copied to your clipboard",
				Duration = 6.5,
				Image = 0,
			})
		else
			Rayfield:Notify({
				Title = "Failed to copy",
				Content = "Your executor doesn't support setclipboard/syn.set_clipboard funktion",
				Duration = 6.5,
				Image = 0,
			})
		end
	end,
})

local Weird3 = Tab3:CreateSection("Weirdo Section")

local Bang = Tab3:CreateButton({
	Name = "Load BangGUI",
	Callback = function()
		-- The function that takes place when the button is pressed
		loadstring(game:HttpGet("https://pastebin.com/raw/SvVYqTh6"))()
	end,
})

local Tab4 = Window:CreateTab("Games ðŸŽ®")

local HubsSection = Tab4:CreateSection("Hubs")
local XVCHub = Tab4:CreateButton({
	Name = "Load XVCHub (It's the best keyless hub with over 170 games)",
	Callback = function()
		-- The function that takes place when the button is pressed
		loadstring(game:HttpGet("https://pastebin.com/raw/Piw5bqGq"))()
	end,
})

local GamesSection = Tab4:CreateSection("Current Game")
local gameSupported = false

if game.PlaceId == 4924922222 then
	gameSupported = true
	local Button = Tab4:CreateButton({
		Name = "Brookhaven -- SP Hub",
		Callback = function()
			-- The function that takes place when the button is pressed
			loadstring(game:HttpGet("https://raw.githubusercontent.com/as6cd0/SP_Hub/refs/heads/main/Brookhaven"))()
		end,
	})
end

if game.PlaceId == 2753915549 then
	gameSupported = true
	local Button = Tab4:CreateButton({
		Name = "Blox Fruits (Needs key, but it's worth of it)",
		Callback = function()
			-- The function that takes place when the button is pressed
			loadstring(game:HttpGet(('https://raw.githubusercontent.com/ThunderZ-05/HUB/main/TestKey')))()
		end,
	})
end

if game.PlaceId == 537413528 then
	gameSupported = true
	local Button = Tab4:CreateButton({
		Name = "Build A Boat (Needs key, but it's worth of it)",
		Callback = function()
			-- The function that takes place when the button is pressed
			loadstring(game:HttpGet('https://raw.githubusercontent.com/TheRealAsu/BABFT/refs/heads/main/Loader.lua'))()
		end,
	})
end

if game.PlaceId == 128475044784063 or game.PlaceId == 127239803293427 then
	gameSupported = true
	local Button = Tab4:CreateButton({
		Name = "Happy Ghost -- Potato Hub",
		Callback = function()
			-- The function that takes place when the button is pressed
			loadstring(game:HttpGet("https://raw.githubusercontent.com/wowkilopard-coder/Potato-Hub/refs/heads/main/Happy%20Ghost%20Script"))()
		end,
	})
end

if gameSupported == false then
	local NotSupported = Tab4:CreateButton({
		Name = "This game isn't supported",
		Callback = function()
			-- The function that takes place when the button is pressed
		end,
	})
end

local SupportedGames = Tab4:CreateSection("Supported Games:")

local Paragraph = Tab4:CreateParagraph({
	Title = "Supported Games",
	Content = "Brookhaven\nBlox Fruits\nBuild A Boat For Treasure\nHappy Ghost"
})

local Tab5 = Window:CreateTab("Server")

local PsGUI = Tab5:CreateButton({
	Name = "Load Free Private Server GUI (Patched)",
	Callback = function()
		-- The function that takes place when the button is pressed
		loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-FREE-PRIVATE-SERVER-GUI-ANY-GAME-55939"))()
		Rayfield:Notify({
			Title = "Loaded Successfully",
			Content = "Free PrivateServerGUI successfully loaded",
			Duration = 6.5,
			Image = 0,
		})
	end,
})

local RejoinButton = Tab5:CreateButton({
	Name = "Rejoin",
	Callback = function()
		-- The function that takes place when the button is pressed
		local TeleportService = game:GetService("TeleportService")
		local Players = game:GetService("Players")

		local player = Players.LocalPlayer
		local placeId = game.PlaceId
		local jobId = game.JobId  -- nykyisen serverin ID

		TeleportService:TeleportToPlaceInstance(placeId, jobId, player)
		Rayfield:Notify({
			Title = "Rejoining...",
			Content = "You are currently rejoining this server",
			Duration = 6.5,
			Image = 0,
		})

	end,
})

local ServerHopButton = Tab5:CreateButton({
	Name = "Server Hop",
	Callback = function()
		-- The function that takes place when the button is pressed
		local HttpService = game:GetService("HttpService")
		local TeleportService = game:GetService("TeleportService")
		local Players = game:GetService("Players")

		local player = Players.LocalPlayer
		local placeId = game.PlaceId
		local currentJobId = game.JobId

		local function getServerList(cursor)
			local url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Asc&limit=100", placeId)
			if cursor then
				url = url .. "&cursor=" .. cursor
			end
			local response = game:HttpGet(url)
			return HttpService:JSONDecode(response)
		end

		local function getRandomServer()
			local data = getServerList()
			if not data or not data.data then return nil end

			local possibleServers = {}
			for _, server in ipairs(data.data) do
				if server.id ~= currentJobId and server.playing < server.maxPlayers then
					table.insert(possibleServers, server.id)
				end
			end

			if #possibleServers > 0 then
				return possibleServers[math.random(1, #possibleServers)]
			else
				return nil
			end
		end
		
		local function serverHop()
			local serverId = getRandomServer()
			if serverId then
				TeleportService:TeleportToPlaceInstance(placeId, serverId, player)
			else
				TeleportService:Teleport(placeId, player)
			end
		end
		
		serverHop()
		Rayfield:Notify({
			Title = "Teleporting...",
			Content = "You are currently teleporting to random server",
			Duration = 6.5,
			Image = 0,
		})
	end,
})
